name: Run compatibility tests
on: [ workflow_call ]

jobs:
  generate:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ 'ubuntu-latest', 'macos-latest', 'windows-latest' ]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-gradle
        with:
          cache-read-only: true

      - name: Run tests
        uses: gradle/gradle-build-action@v2
        with:
          arguments: |
            cryptography-providers-tests-compatibility:allTests
            -Ptests.compatibility.step=Generate
            -Ptesttool.instanceId=${{ matrix.os }}
            --continue

      - name: Dump testtool server-storage
        uses: gradle/gradle-build-action@v2
        with:
          arguments: |
            dumpTesttoolServerStorage
            -Ptesttool.instanceId=${{ matrix.os }}
      - name: Upload testtool server-storage dump
        uses: actions/upload-artifact@v3
        with:
          name: compatibility-tests-data
          path: build/testtool/server-storage-dump/*.zip
          if-no-files-found: error

  validate:
    needs: [ generate ]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ 'ubuntu-latest', 'macos-latest', 'windows-latest' ]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-gradle
        with:
          cache-read-only: true

      - name: Download testtool server-storage dump
        uses: actions/download-artifact@v3
        with:
          name: compatibility-tests-data
          path: build/testtool/server-storage-dump

      - name: Restore testtool server-storage
        uses: gradle/gradle-build-action@v2
        with:
          arguments: restoreTesttoolServerStorage

      - name: Run tests (unix)
        if: matrix.os != 'windows-latest'
        uses: gradle/gradle-build-action@v2
        with:
          arguments: |
            cryptography-providers-tests-compatibility:allTests
            -Ptests.compatibility.step=Validate
            -Ptesttool.instanceId=${{ matrix.os }}
            --continue
      # for windows, we skip jsNodeTest task, because for some reason it timeouts
      - name: Run tests (windows)
        if: matrix.os == 'windows-latest'
        uses: gradle/gradle-build-action@v2
        with:
          arguments: |
            cryptography-providers-tests-compatibility:allTests
            -Ptests.compatibility.step=Validate
            -Ptesttool.instanceId=${{ matrix.os }}
            --continue
            --exclude-task
            jsNodeTest
