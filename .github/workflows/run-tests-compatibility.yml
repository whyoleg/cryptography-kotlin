name: Run compatibility tests
on:
  workflow_dispatch:
  workflow_call:

concurrency:
  group: compatibility-tests
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  tests-compatibility-generate:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ 'ubuntu-latest' ]
        target: [ 'jvm', 'js', 'wasm' ]
        include:
          - os: 'macos-latest'
            target: 'macos'
          - os: 'windows-latest'
            target: 'native'
          - os: 'ubuntu-latest'
            target: 'native'
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-environment

      - name: Run tests
        if: ${{ matrix.target != 'connectedAndroid' }}
        run: >
          ./gradlew
          ${{ matrix.target }}ProviderTest
          --continue
          -Pckbuild.providerTests.step=compatibility.generate
          -Pckbuild.testtool.instanceId=${{ matrix.os }}-${{ matrix.target }}-${{ matrix.android-api-level }}

      - name: Run tests (android)
        if: ${{ matrix.target == 'connectedAndroid' }}
        uses: ./.github/actions/run-android-emulator-tests
        with:
          api-level: ${{ matrix.android-api-level }}
          test-reports-classifier: 'compatibility-generate'
          run: >
            ./gradlew
            ${{ matrix.target }}ProviderTest
            --continue
            -Pckbuild.providerTests.step=compatibility.generate
            -Pckbuild.testtool.instanceId=${{ matrix.os }}-${{ matrix.target }}-${{ matrix.android-api-level }}

      - name: Dump testtool server-storage
        run: tar -cf ${{ matrix.os }}-${{ matrix.target }}-${{ matrix.android-api-level }}.tar build/testtool/server-storage
      - name: Upload testtool server-storage
        uses: actions/upload-artifact@v4
        with:
          name: compatibility-tests-data-${{ matrix.os }}-${{ matrix.target }}-${{ matrix.android-api-level }}
          path: ${{ matrix.os }}-${{ matrix.target }}-${{ matrix.android-api-level }}.tar
          if-no-files-found: error

  tests-compatibility-validate:
    needs: [ tests-compatibility-generate ]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ 'ubuntu-latest' ]
        target: [ 'jvm', 'js', 'wasm' ]
        include:
          - os: 'macos-latest'
            target: 'macos'
          - os: 'windows-latest'
            target: 'native'
          - os: 'ubuntu-latest'
            target: 'native'
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-environment

      - name: Download testtool server-storage
        uses: actions/download-artifact@v4
        with:
          pattern: compatibility-tests-data-*
          merge-multiple: true
      - name: Restore testtool server-storage
        run: for file in *.tar; do tar -xf "$file"; done
      - name: Delete downloaded testtool server-storage
        run: rm *.tar

      - name: Run tests
        if: ${{ matrix.target != 'connectedAndroid' }}
        run: >
          ./gradlew
          ${{ matrix.target }}ProviderTest
          --continue
          -Pckbuild.providerTests.step=compatibility.validate
          -Pckbuild.testtool.instanceId=${{ matrix.os }}-${{ matrix.target }}-${{ matrix.android-api-level }}

      - name: Run tests (android)
        if: ${{ matrix.target == 'connectedAndroid' }}
        uses: ./.github/actions/run-android-emulator-tests
        with:
          api-level: ${{ matrix.android-api-level }}
          test-reports-classifier: 'compatibility-validate'
          run: >
            ./gradlew
            ${{ matrix.target }}ProviderTest
            --continue
            -Pckbuild.providerTests.step=compatibility.validate
            -Pckbuild.testtool.instanceId=${{ matrix.os }}-${{ matrix.target }}-${{ matrix.android-api-level }}
